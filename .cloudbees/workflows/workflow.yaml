apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: Action test

on:
  push:
    branches:
    - '**'

permissions:
  id-token: write

jobs:
  test:
    steps:
    - name: Get source code
      uses: cloudbees-io/checkout@v1

    - id: dockerhub
      name: Login to Dockerhub using CloudBees service account
      uses: cloudbees-io/configure-oci-credentials@v1
      with:
        registry: docker.io
        username: ${{ secrets.e5bbc3_dockerhub_user }}
        password: ${{ secrets.e5bbc3_dockerhub_password }}

    - id: aws-login
      name: Login to AWS
      uses: cloudbees-io/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        role-to-assume: ${{ vars.oidc_staging_iam_role }}
        role-duration-seconds: "3600"
    
    - id: configure-ecr
      name: Configure container registry for ECR
      uses: cloudbees-io/configure-ecr-credentials@v1

    - id: actionrunmax
      name: Run Action with all inputs specified
      uses: ./
      with:
        src: ubuntu:latest
        destination: ${{ vars.staging_image_registry }}/ubuntu:dst-test
        platform: linux/amd64
        skip-image-validation: 'false'

    - name: Test Action output maximum
      uses: docker://gcr.io/go-containerregistry/crane:debug
      run: |
        SRC_DIGEST=$(crane digest ubuntu:latest --platform linux/amd64)
        DEST_DIGEST=$(crane digest ${{ vars.staging_image_registry }}/ubuntu:dst-test --platform linux/amd64)

        [ "$DEST_DIGEST" = '${{ steps.actionrunmax.outputs.digest }}' ]
        [ "$SRC_DIGEST" = "$DEST_DIGEST" ]

    - id: actionrunrequired
      name: Run Action with only required inputs specified
      uses: ./
      with:
        src: alpine:latest
        destination: ${{ vars.staging_image_registry }}/alpine:dst-test

    - name: Test Action output required inputs
      uses: docker://gcr.io/go-containerregistry/crane:debug
      run: |
        SRC_DIGEST=$(crane digest alpine:latest --platform "all")
        DEST_DIGEST=$(crane digest ${{ vars.staging_image_registry }}/alpine:dst-test --platform "all")

        [ "$DEST_DIGEST" = '${{ steps.actionrunrequired.outputs.digest }}' ]
        [ "$SRC_DIGEST" = "$DEST_DIGEST" ]

    - id: promotecharts
      name: Run action to promote helm charts
      uses: ./
      with:
        src: ghcr.io/nginxinc/charts/nginx-ingress:1.0.2
        destination: ${{ vars.staging_chart_registry }}/nginx-ingress:1.0.2

    - name: Test Action for promoting helm charts
      uses: docker://gcr.io/go-containerregistry/crane:debug
      run: |
        set -x
        SRC_DIGEST=$(crane digest ghcr.io/nginxinc/charts/nginx-ingress:1.0.2 --platform "all")
        DEST_DIGEST=$(crane digest ${{ vars.staging_chart_registry }}/nginx-ingress:1.0.2 --platform "all")

        [ "$DEST_DIGEST" = '${{ steps.promotecharts.outputs.digest }}' ]
        [ "$SRC_DIGEST" = "$DEST_DIGEST" ]